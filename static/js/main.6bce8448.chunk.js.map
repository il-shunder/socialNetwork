{"version":3,"sources":["dal/api.js","reportWebVitals.js","redux/usersReducer.js","redux/authReducer.js","redux/appReducer.js","redux/reduxStore.js","components/main/sidebar/Sidebar.js","components/main/users/Users.jsx","select/select.js","components/main/users/UsersContainer.jsx","components/header/Header.js","components/header/HeaderContainer.jsx","components/main/login/Login.jsx","components/main/login/LoginContainer.jsx","App.js","index.js","helper/validators.js","images/preload.svg","components/main/common/Preload.jsx","components/main/common/FormsControl.jsx","redux/profileReducer.js","redux/dialogsReducer.js"],"names":["instance","axios","baseURL","withCredentials","headers","usersApi","getUsers","page","count","get","then","response","data","unFollow","id","delete","follow","post","getUserProfile","getAuth","profileApi","putPhoto","photo","FormData","append","statusApi","getStatus","updateStatus","status","put","authApi","postAuth","email","password","rememberMe","deleteAuth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","users","totalCount","isFetching","inProcess","setFetching","type","removeFromProcess","value","userId","userLogin","userEmail","isAuth","setUserAuth","login","authThunkCreator","dispathc","a","resultCode","init","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","usersPage","state","action","map","user","followed","inprocess","filter","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","getState","Sidebar","params","className","to","Users","pages","Math","ceil","arr","i","push","item","onClick","newPage","src","photos","small","alt","some","followedThunkCreater","name","UsersApiComponent","props","getUsersThunkCreater","this","Preload","React","Component","UsersContainer","connect","dispatch","setPage","items","setTotalCount","Header","href","style","marginLeft","fontSize","AuthApiComponent","HeaderContainer","maxLength50","maxLengthCreater","LoginReduxForm","reduxForm","onSubmit","handleSubmit","Field","component","Input","placeholder","validate","required","error","compose","stopSubmit","_error","messages","values","DialogsContainer","lazy","ProfileContainer","App","appInitThunkCreator","fallback","exact","path","render","LoginContainer","withRouter","renderTree","ReactDOM","StrictMode","document","getElementById","subscribe","length","preload","FormsControl","input","meta","children","touched","TextArea","restParams","postsData","text","profile","newState","Object","keys","key","postId","addPostActionCreater","setStatus","getProfileThunkCreator","getStatusThunkCreator","updateStatusThunkCreator","photoUpdateThunkCreator","usersData","messagesData","messId","mess","addMessageActionCreater"],"mappings":"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","file":"static/js/main.6bce8448.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"ba4a5287-b16d-481b-86b9-562e339658b0\",\r\n    },\r\n});\r\n\r\nexport const usersApi = {\r\n    getUsers(page, count) {\r\n        return instance.get(`users?page=${page}&count=${count}&term=id`).then((response) => response.data);\r\n    },\r\n    unFollow(id) {\r\n        return instance.delete(`follow/${id}`).then((response) => response.data);\r\n    },\r\n    follow(id) {\r\n        return instance.post(`follow/${id}`).then((response) => response.data);\r\n    },\r\n    getUserProfile(id) {\r\n        return instance.get(`profile/${id}`).then((response) => response.data);\r\n    },\r\n    getAuth() {\r\n        return instance.get(`auth/me`).then((response) => response.data);\r\n    },\r\n};\r\n\r\nexport const profileApi = {\r\n    putPhoto(photo) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photo);\r\n        // formData.append(\"username\", \"Groucho\");\r\n        // console.log(\"formData: \", formData);\r\n        // console.log(\"formData.getAll(): \", formData.getAll(\"image\"));\r\n        // console.log(\"formData.values(): \", formData.values());\r\n        // console.log(\"formData.keys(): \", formData.keys());\r\n        // return instance\r\n        //     .put(\r\n        //         `profile/photo`,\r\n        //         { image },\r\n        //         {\r\n        //             headers: {\r\n        //                 \"Content-Type\": \"multipart/form-data\",\r\n        //             },\r\n        //         }\r\n        //     )\r\n        //     .then((response) => response.data);\r\n    },\r\n};\r\n\r\nexport const statusApi = {\r\n    getStatus(id) {\r\n        return instance.get(`profile/status/${id}`).then((response) => response.data);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status }).then((response) => response.data);\r\n    },\r\n};\r\n\r\nexport const authApi = {\r\n    postAuth(email, password, rememberMe) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe }).then((response) => response.data);\r\n    },\r\n    deleteAuth() {\r\n        return instance.delete(`auth/login`).then((response) => response.data);\r\n    },\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { usersApi } from \"../dal/api\";\r\n\r\nlet initState = {\r\n    users: [],\r\n    page: 1,\r\n    count: 5,\r\n    totalCount: 10,\r\n    isFetching: false,\r\n    inProcess: [],\r\n};\r\n\r\nexport default function usersReducer(state = initState, action) {\r\n    switch (action.type) {\r\n        case \"follow\":\r\n            return {\r\n                ...state,\r\n                users: state.users.map((user) => {\r\n                    if (user.id === action.id) {\r\n                        return {\r\n                            ...user,\r\n                            followed: true,\r\n                        };\r\n                    }\r\n                    return user;\r\n                }),\r\n            };\r\n        case \"unFollow\":\r\n            return {\r\n                ...state,\r\n                users: state.users.map((user) => {\r\n                    if (user.id === action.id) {\r\n                        return {\r\n                            ...user,\r\n                            followed: false,\r\n                        };\r\n                    }\r\n                    return user;\r\n                }),\r\n            };\r\n        case \"setUsers\":\r\n            return {\r\n                ...state,\r\n                users: [...action.users],\r\n            };\r\n        case \"setTotalCount\":\r\n            return {\r\n                ...state,\r\n                totalCount: action.count,\r\n            };\r\n        case \"setPage\":\r\n            return {\r\n                ...state,\r\n                page: action.page,\r\n            };\r\n        case \"setFetching\":\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            };\r\n        case \"setProcess\":\r\n            return {\r\n                ...state,\r\n                inProcess: [...state.inProcess, action.inprocess],\r\n            };\r\n        case \"removeFromProcess\": {\r\n            return {\r\n                ...state,\r\n                inProcess: state.inProcess.filter((id) => id !== action.value),\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => ({ type: \"follow\", id: userId });\r\nexport const unFollow = (userId) => ({ type: \"unFollow\", id: userId });\r\nexport const setUsers = (users) => ({ type: \"setUsers\", users: users });\r\nexport const setTotalCount = (count) => ({ type: \"setTotalCount\", count });\r\nexport const setPage = (page) => ({ type: \"setPage\", page });\r\nexport const setFetching = (isFetching) => ({ type: \"setFetching\", isFetching });\r\nexport const setProcess = (inprocess) => ({ type: \"setProcess\", inprocess });\r\nexport const removeFromProcess = (value) => ({ type: \"removeFromProcess\", value });\r\n\r\nexport function getUsersThunkCreater(page, count) {\r\n    return (dispatch) => {\r\n        dispatch(setFetching(true));\r\n        dispatch(setPage(page));\r\n        usersApi.getUsers(page, count).then((data) => {\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setFetching(false));\r\n            dispatch(setTotalCount(50));\r\n        });\r\n    };\r\n}\r\nexport function followedThunkCreater(user) {\r\n    return (dispatch) => {\r\n        dispatch(setProcess(user.id));\r\n        if (user.followed) {\r\n            usersApi.unFollow(user.id).then((data) => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(unFollow(user.id));\r\n                    dispatch(removeFromProcess(user.id));\r\n                }\r\n            });\r\n        } else {\r\n            usersApi.follow(user.id).then((data) => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(follow(user.id));\r\n                    dispatch(removeFromProcess(user.id));\r\n                }\r\n            });\r\n        }\r\n    };\r\n}\r\n","import { stopSubmit } from \"redux-form\";\r\nimport { usersApi, authApi } from \"../dal/api\";\r\n\r\nlet initState = {\r\n    userId: null,\r\n    userLogin: null,\r\n    userEmail: null,\r\n    isAuth: null,\r\n};\r\n\r\nexport default function authReducer(state = initState, action) {\r\n    switch (action.type) {\r\n        case \"setUserAuth\": {\r\n            return {\r\n                ...state,\r\n                userId: action.id,\r\n                userLogin: action.login,\r\n                userEmail: action.email,\r\n                isAuth: action.isAuth,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUserAuth = (id, login, email, isAuth) => ({ type: \"setUserAuth\", id, login, email, isAuth });\r\n\r\nexport function authThunkCreator() {\r\n    return async (dispathc) => {\r\n        const response = await usersApi.getAuth();\r\n        if (response.resultCode === 0) {\r\n            return dispathc(setUserAuth(response.data.id, response.data.login, response.data.email, true));\r\n        }\r\n    };\r\n}\r\n\r\nexport function postAuthThunkCreator(email, password, rememberMe) {\r\n    return async (dispathc) => {\r\n        const data = await authApi.postAuth(email, password, rememberMe);\r\n\r\n        if (data.resultCode === 0) {\r\n            dispathc(authThunkCreator());\r\n        } else {\r\n            dispathc(stopSubmit(\"login\", { _error: data.messages }));\r\n        }\r\n    };\r\n}\r\n\r\nexport function deleteAuthThunkCreator() {\r\n    return async (dispathc) => {\r\n        const data = await authApi.deleteAuth();\r\n        if (data.resultCode === 0) {\r\n            dispathc(setUserAuth(null, null, null, false));\r\n        }\r\n    };\r\n}\r\n","import { authThunkCreator } from \"./authReducer\";\r\n\r\nlet initState = {\r\n    init: false,\r\n};\r\n\r\nexport default function appReducer(state = initState, action) {\r\n    switch (action.type) {\r\n        case \"setInitSuccessful\": {\r\n            return {\r\n                ...state,\r\n                init: true,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setInitSuccessful = () => ({ type: \"setInitSuccessful\" });\r\n\r\nexport function appInitThunkCreator() {\r\n    return (dispathc) => {\r\n        let promise = dispathc(authThunkCreator());\r\n\r\n        promise.then(() => {\r\n            dispathc(setInitSuccessful());\r\n        });\r\n    };\r\n}\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.state = store.getState();\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Sidebar.css';\r\n\r\nexport default function Sidebar(params) {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <nav className=\"nav\">\r\n                <NavLink to=\"/profile\">Profile</NavLink>\r\n                <NavLink to=\"/dialogs\">Messages</NavLink>\r\n                <NavLink to=\"/users\">Users</NavLink>\r\n\r\n                {/* <a href=\"#\" className={style.item}>\r\n                    News\r\n                </a>\r\n                <a href=\"#\" className={style.item}>\r\n                    Music\r\n                </a>\r\n                <a href=\"#\" className={style.sett}>\r\n                    Settings\r\n                </a> */}\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Users.css\";\r\n\r\nexport default function Users(params) {\r\n    const pages = Math.ceil(params.totalCount / params.count);\r\n    const arr = [];\r\n    for (let i = 1; i <= pages; i++) arr.push(i);\r\n\r\n    return (\r\n        <div className=\"user-page\">\r\n            <div className=\"title\">Users</div>\r\n            <div className=\"pag\">\r\n                {arr.map((item) => {\r\n                    return (\r\n                        <div onClick={() => params.newPage(item)} className={params.page === item ? \"pag__item active\" : \"pag__item\"} key={item}>\r\n                            {item}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n            <div className=\"body\">\r\n                {params.users.map((user) => {\r\n                    return (\r\n                        <div className=\"item\" key={user.id}>\r\n                            <div className=\"row\">\r\n                                <div className=\"left\">\r\n                                    <NavLink to={`/profile/${user.id}`}>\r\n                                        <div className=\"img\">\r\n                                            <img\r\n                                                src={\r\n                                                    user.photos.small != null\r\n                                                        ? user.photos.small\r\n                                                        : \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQCoxWc5ukrkkaNHBArZt7YJq15_xWWDb4NdQ&usqp=CAU\"\r\n                                                }\r\n                                                alt=\"\"\r\n                                            />\r\n                                        </div>\r\n                                    </NavLink>\r\n                                    <div\r\n                                        className={params.inProcess.some((id) => id === user.id) ? \"followed disabled\" : \"followed\"}\r\n                                        onClick={() => {\r\n                                            params.followedThunkCreater(user);\r\n                                        }}\r\n                                    >\r\n                                        {user.followed ? \"Unfollow\" : \"Follow\"}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"right\">\r\n                                    <div className=\"subrow\">\r\n                                        <div className=\"info\">\r\n                                            <div className=\"name\">{user.name}</div>\r\n                                            <div className=\"status\">{user.status}</div>\r\n                                        </div>\r\n                                        <div className=\"location\">\r\n                                            <div className=\"country\">{\"user.location.country\"}</div>\r\n                                            <div className=\"city\">{\"user.location.city\"}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n            <div className=\"cover\">\r\n                <div className=\"btn\">Show more</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","export function getUsers(state) {\r\n    return state.usersPage.users;\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUsersThunkCreater, followedThunkCreater } from \"../../../redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport Preload from \"../common/Preload\";\r\nimport { getUsers } from \"../../../select/select\";\r\n\r\nexport class UsersApiComponent extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreater(this.props.page, this.props.count);\r\n    }\r\n\r\n    newPage = (page) => {\r\n        this.props.getUsersThunkCreater(page, this.props.count);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"preload\">{this.props.isFetching ? <Preload /> : null}</div>\r\n                <Users\r\n                    totalCount={this.props.totalCount}\r\n                    count={this.props.count}\r\n                    page={this.props.page}\r\n                    users={this.props.users}\r\n                    newPage={this.newPage}\r\n                    inProcess={this.props.inProcess}\r\n                    followedThunkCreater={this.props.followedThunkCreater}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: getUsers(state),\r\n        page: state.usersPage.page,\r\n        count: state.usersPage.count,\r\n        totalCount: state.usersPage.totalCount,\r\n        isFetching: state.usersPage.isFetching,\r\n        inProcess: state.usersPage.inProcess,\r\n    };\r\n}\r\n\r\nconst UsersContainer = connect(mapStateToProps, {\r\n    getUsersThunkCreater,\r\n    followedThunkCreater,\r\n})(UsersApiComponent);\r\n\r\nexport default UsersContainer;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function Header(params) {\r\n    return (\r\n        <header>\r\n            <div className=\"header\">\r\n                <div className=\"container\">\r\n                    <div className=\"header__body\">\r\n                        <a href=\"/\">\r\n                            <img src=\"https://cdn.logo.com/hotlink-ok/logo-social.png\" alt=\"\" />\r\n                        </a>\r\n                        <div className=\"auth\" style={{ marginLeft: \"auto\", fontSize: \"24px\" }}>\r\n                            {params.isAuth ? (\r\n                                <div>\r\n                                    {params.userLogin} ---- <button onClick={params.deleteAuth}>Logout</button>\r\n                                </div>\r\n                            ) : (\r\n                                <NavLink to=\"/login\">Login</NavLink>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./Header\";\r\nimport { deleteAuthThunkCreator } from \"../../redux/authReducer\";\r\n\r\nexport class AuthApiComponent extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />;\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userId: state.auth.userId,\r\n        userLogin: state.auth.userLogin,\r\n        userEmail: state.auth.userEmail,\r\n        isAuth: state.auth.isAuth,\r\n    };\r\n}\r\n\r\nconst HeaderContainer = connect(mapStateToProps, { deleteAuth: deleteAuthThunkCreator })(AuthApiComponent);\r\n\r\nexport default HeaderContainer;\r\n","import React from \"react\";\r\nimport \"./Login.css\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Input } from \"../common/FormsControl\";\r\nimport { maxLengthCreater, required } from \"../../../helper/validators\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst maxLength50 = maxLengthCreater(50);\r\n\r\nfunction LoginForm(params) {\r\n    return (\r\n        <form onSubmit={params.handleSubmit} className=\"form\">\r\n            <label className=\"label\">\r\n                <span>\r\n                    <Field name=\"email\" component={Input} type=\"text\" placeholder=\"Email\" validate={[required, maxLength50]} />\r\n                </span>\r\n            </label>\r\n            <label className=\"label\">\r\n                <span>\r\n                    <Field name=\"password\" component={Input} type=\"text\" placeholder=\"Password\" validate={[required, maxLength50]} />\r\n                </span>\r\n            </label>\r\n            <label className=\"label\">\r\n                <span>\r\n                    <Field name=\"rememberMe\" component=\"input\" type=\"checkbox\" /> Remember me\r\n                </span>\r\n            </label>\r\n            {params.error && <div className=\"form__error\">{params.error}</div>}\r\n            <button type=\"submit\" className=\"btn\">\r\n                Login\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: \"login\",\r\n})(LoginForm);\r\n\r\nexport default function Login(params) {\r\n    if (params.isAuth) {\r\n        return <Redirect to=\"/profile\" />;\r\n    }\r\n\r\n    function onSubmit(values) {\r\n        if (!values.rememberMe) values.rememberMe = false;\r\n        params.postAuth(values.email, values.password, values.rememberMe);\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"title\">Login</div>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { postAuthThunkCreator } from \"../../../redux/authReducer\";\r\nimport Login from \"./Login\";\r\n\r\n// export class LoginApiComponent extends React.Component {\r\n//     componentDidMount() {\r\n//         let userId = this.props.match.params.userId;\r\n//         if (!userId) {\r\n//             userId = 21563;\r\n//         }\r\n//         this.props.getProfileThunkCreator(userId);\r\n//         this.props.getStatusThunkCreator(userId);\r\n//     }\r\n\r\n//     render() {\r\n//         return <Login />;\r\n//     }\r\n// }\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    };\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, { postAuth: postAuthThunkCreator }))(Login);\r\n","import React, { Component, Suspense } from \"react\";\nimport \"./App.css\";\nimport Sidebar from \"./components/main/sidebar/Sidebar\";\n// import DialogsContainer from \"./components/main/dialogs/DialogsContainer\";\nimport { Route } from \"react-router-dom\";\nimport UsersContainer from \"./components/main/users/UsersContainer\";\n// import ProfileContainer from \"./components/main/profile/ProfileContainer\";\nimport { Redirect } from \"react-router-dom\";\nimport HeaderContainer from \"./components/header/HeaderContainer\";\n// import Login from \"./components/main/login/Login\";\nimport LoginContainer from \"./components/main/login/LoginContainer\";\nimport { connect } from \"react-redux\";\nimport { appInitThunkCreator } from \"./redux/appReducer\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Preload from \"./components/main/common/Preload\";\n\nconst DialogsContainer = React.lazy(() => import(\"./components/main/dialogs/DialogsContainer\"));\nconst ProfileContainer = React.lazy(() => import(\"./components/main/profile/ProfileContainer\"));\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.appInitThunkCreator();\n    }\n\n    render() {\n        if (!this.props.init) {\n            return <Preload />;\n        }\n\n        return (\n            <div className=\"page\">\n                <HeaderContainer />\n                <main>\n                    <div className=\"main\">\n                        <div className=\"container\">\n                            <Sidebar />\n                            <div className=\"page-content\">\n                                {/* <Routes> */}\n                                <Suspense fallback={<div>Завантаження...</div>}>\n                                    <Route\n                                        exact\n                                        path=\"/\"\n                                        render={() => {\n                                            return <Redirect to=\"/profile\" />;\n                                        }}\n                                    />\n                                    <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\n                                    <Route path=\"/dialogs\" render={() => <DialogsContainer />} />\n                                    <Route path=\"/users\" render={() => <UsersContainer />} />\n                                    <Route path=\"/login\" render={() => <LoginContainer />} />\n                                </Suspense>\n                                {/* </Routes> */}\n                            </div>\n                        </div>\n                    </div>\n                </main>\n                <footer></footer>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        init: state.app.init,\n    };\n}\n\nexport default compose(connect(mapStateToProps, { appInitThunkCreator }), withRouter)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/reduxStore';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nfunction renderTree(state) {\n    ReactDOM.render(\n        <React.StrictMode>\n            <BrowserRouter>\n                <Provider store={store}>\n                    <App />\n                </Provider>\n            </BrowserRouter>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\n\nrenderTree(store.getState());\n\nstore.subscribe(() => {\n    renderTree(store.getState());\n});\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export function required(value) {\r\n    if (value || typeof value === \"number\") {\r\n        return undefined;\r\n    } else {\r\n        return \"Required\";\r\n    }\r\n}\r\n\r\nexport function maxLengthCreater(length) {\r\n    return function (value) {\r\n        if (value && value.length > length) {\r\n            return `Must be ${length} characters or less`;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    };\r\n}\r\n","export default __webpack_public_path__ + \"static/media/preload.96069256.svg\";","\r\nimport preload from '../../../images/preload.svg';\r\n\r\nexport default function Preload(params) {\r\n    return(\r\n        <img src={preload} alt=\"\"/>\r\n    )\r\n};\r\n","import \"./FormsControl.css\";\r\n// FormsControl\r\n\r\nfunction FormsControl({ input, meta, children, ...params }) {\r\n    return (\r\n        <div className={meta.touched && meta.error ? \"label error\" : \"label\"}>\r\n            <span>{children}</span>\r\n            <div className=\"error__text\">{meta.error}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function TextArea(params) {\r\n    const { input, meta, children, ...restParams } = params;\r\n    return (\r\n        <FormsControl {...params}>\r\n            <textarea {...input} {...restParams}></textarea>\r\n        </FormsControl>\r\n    );\r\n}\r\n\r\nexport function Input(params) {\r\n    const { input, meta, children, ...restParams } = params;\r\n    return (\r\n        <FormsControl {...params}>\r\n            <input {...input} {...restParams} />\r\n        </FormsControl>\r\n    );\r\n}\r\n","import { profileApi, statusApi, usersApi } from \"../dal/api\";\r\n\r\nlet initState = {\r\n    postsData: [\r\n        { id: 1, text: \"Hello world!!!!\" },\r\n        { id: 2, text: \"I'm Mike, hi\" },\r\n        { id: 3, text: \"You are my friend\" },\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n};\r\n\r\nexport default function profileReducer(state = initState, action) {\r\n    switch (action.type) {\r\n        case \"addPost\": {\r\n            const newState = { ...state };\r\n            newState.postsData = { ...state.postsData };\r\n            newState.postsData = Object.keys(newState.postsData).map((key) => newState.postsData[key]);\r\n\r\n            const postId = newState.postsData[newState.postsData.length - 1].id + 1;\r\n            const post = { id: postId, text: action.text };\r\n            newState.postsData.push(post);\r\n            return newState;\r\n        }\r\n        case \"setProfile\": {\r\n            return {\r\n                ...state,\r\n                profile: { ...action.profile },\r\n            };\r\n        }\r\n        case \"setStatus\": {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreater = (text) => ({ type: \"addPost\", text });\r\nexport const setProfile = (profile) => ({ type: \"setProfile\", profile });\r\nexport const setStatus = (status) => ({ type: \"setStatus\", status });\r\n\r\nexport function getProfileThunkCreator(userId) {\r\n    return (dispatch) => {\r\n        usersApi.getUserProfile(userId).then((data) => {\r\n            dispatch(setProfile(data));\r\n        });\r\n    };\r\n}\r\nexport function getStatusThunkCreator(userId) {\r\n    return (dispatch) => {\r\n        statusApi.getStatus(userId).then((data) => {\r\n            if (data) {\r\n                dispatch(setStatus(data));\r\n            } else {\r\n                dispatch(setStatus(\"There no status!!!\"));\r\n            }\r\n        });\r\n    };\r\n}\r\n\r\nexport function updateStatusThunkCreator(status) {\r\n    return (dispatch) => {\r\n        statusApi.updateStatus(status).then((data) => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n        });\r\n    };\r\n}\r\n\r\nexport function photoUpdateThunkCreator(photo) {\r\n    return (dispatch) => {\r\n        profileApi.putPhoto(photo).then((data) => {\r\n            debugger;\r\n            // if (data.resultCode === 0) {\r\n            //     dispatch(setStatus(status));\r\n            // }\r\n        });\r\n    };\r\n}\r\n","let initState = {\r\n    usersData: [\r\n        { id: 1, name: \"Illia\" },\r\n        { id: 2, name: \"Lilia\" },\r\n        { id: 3, name: \"Olya\" },\r\n        { id: 4, name: \"Roman\" },\r\n        { id: 5, name: \"Bogdan\" },\r\n    ],\r\n    messagesData: [\r\n        { id: 1, src: \"https://www.pixsy.com/wp-content/uploads/2021/04/ben-sweet-2LowviVHZ-E-unsplash-1.jpeg\", text: \"Hi\" },\r\n        { id: 2, src: \"https://www.pixsy.com/wp-content/uploads/2021/04/ben-sweet-2LowviVHZ-E-unsplash-1.jpeg\", text: \"How are you?\" },\r\n        { id: 3, src: \"https://www.pixsy.com/wp-content/uploads/2021/04/ben-sweet-2LowviVHZ-E-unsplash-1.jpeg\", text: \"Hello world!!!!!\" },\r\n    ],\r\n};\r\n\r\nexport default function dialogsReducer(state = initState, action) {\r\n    switch (action.type) {\r\n        case \"addMessage\": {\r\n            const newState = { ...state };\r\n            newState.messagesData = { ...state.messagesData };\r\n            newState.messagesData = Object.keys(newState.messagesData).map((key) => newState.messagesData[key]);\r\n\r\n            const messId = newState.messagesData[newState.messagesData.length - 1].id + 1;\r\n            const mess = {\r\n                id: messId,\r\n                text: action.text,\r\n                src: \"https://www.pixsy.com/wp-content/uploads/2021/04/ben-sweet-2LowviVHZ-E-unsplash-1.jpeg\",\r\n            };\r\n\r\n            newState.messagesData.push(mess);\r\n            return newState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreater = (text) => ({ type: \"addMessage\", text });\r\n"],"sourceRoot":""}